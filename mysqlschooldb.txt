CREATE TABLE QUESTION_TYPES (
    QUESTION_TYPE INT AUTO_INCREMENT PRIMARY KEY,
    TYPE_NAME VARCHAR(32) NOT NULL
);

CREATE TABLE COURSE (
    COURSE_ID VARCHAR(8) PRIMARY KEY,
    COURSE_NAME VARCHAR(128) NOT NULL
);

CREATE TABLE CLO (
    CLO_ID VARCHAR(12) PRIMARY KEY,
    CLO_NAME VARCHAR(256) NOT NULL,
    CLO_DESC VARCHAR(1024),
    COURSE_ID VARCHAR(8),
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE(COURSE_ID)
);

CREATE TABLE QUESTION (
    QUESTION_ID INT AUTO_INCREMENT PRIMARY KEY,
    QUESTION_DESC VARCHAR(1024) NOT NULL,
    QUESTION_TYPE INT,
    MAX_MARKS INT NOT NULL,
    FOREIGN KEY (QUESTION_TYPE) REFERENCES QUESTION_TYPES(QUESTION_TYPE)
);

CREATE TABLE QUESTION_CLO (
    QUESTION_ID INT,
    CLO_ID VARCHAR(12),
    PRIMARY KEY (QUESTION_ID, CLO_ID),
    FOREIGN KEY (QUESTION_ID) REFERENCES QUESTION(QUESTION_ID),
    FOREIGN KEY (CLO_ID) REFERENCES CLO(CLO_ID)
);

CREATE TABLE QUALIFICATION (
    QUALIFICATION_ID INT AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(128) NOT NULL
);

CREATE TABLE FACULTY (
    FACULTY_ID INT AUTO_INCREMENT PRIMARY KEY,
    CNIC VARCHAR(15) UNIQUE,
    FIRST_NAME VARCHAR(64) NOT NULL,
    LAST_NAME VARCHAR(64) NOT NULL,
    DOB DATE NOT NULL,
    GENDER VARCHAR(7),
    HIRE_DATE DATE NOT NULL,
    NATIONALITY VARCHAR(32) NOT NULL,
    RELIGION VARCHAR(128),
    FULL_TIME BOOLEAN,
    SALARY INT NOT NULL
);

CREATE TABLE FACULTY_QUALIFICATION (
    FACULTY_ID INT,
    QUALIFICATION_ID INT,
    PRIMARY KEY (FACULTY_ID, QUALIFICATION_ID),
    FOREIGN KEY (FACULTY_ID) REFERENCES FACULTY(FACULTY_ID),
    FOREIGN KEY (QUALIFICATION_ID) REFERENCES QUALIFICATION(QUALIFICATION_ID)
);

CREATE TABLE ASSESSMENT (
    ASSESSMENT_ID INT AUTO_INCREMENT PRIMARY KEY,
    COURSE_ID VARCHAR(8),
    FACULTY_ID INT,
    MAX_MARKS INT NOT NULL,
    ASSESSMENT_DATE DATE,
    ASSESSMENT_TYPE VARCHAR(64),
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE(COURSE_ID),
    FOREIGN KEY (FACULTY_ID) REFERENCES FACULTY(FACULTY_ID)
);

CREATE TABLE QUESTION_ASSESSMENT (
    QUESTION_ID INT,
    ASSESSMENT_ID INT,
    PRIMARY KEY (QUESTION_ID, ASSESSMENT_ID),
    FOREIGN KEY (QUESTION_ID) REFERENCES QUESTION(QUESTION_ID),
    FOREIGN KEY (ASSESSMENT_ID) REFERENCES ASSESSMENT(ASSESSMENT_ID)
);

CREATE TABLE ECA (
    ECA_ID INT AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(64) NOT NULL
);

CREATE TABLE CLASS (
    CLASS_ID INT AUTO_INCREMENT PRIMARY KEY,
    STRENGTH INT NOT NULL,
    YEAR INT NOT NULL,
    SECTION VARCHAR(2) NOT NULL
);

CREATE TABLE STUDENT (
    STUDENT_ID INT AUTO_INCREMENT PRIMARY KEY,
    CNIC VARCHAR(15) UNIQUE,
    FIRST_NAME VARCHAR(64) NOT NULL,
    LAST_NAME VARCHAR(64) NOT NULL,
    DOB DATE NOT NULL,
    CLASS_ID INT,
    GENDER VARCHAR(7),
    EMERGENCY_CONTACT VARCHAR(20) NOT NULL,
    ADMISSION_DATE DATE NOT NULL,
    NATIONALITY VARCHAR(32) NOT NULL,
    RELIGION VARCHAR(128),
    FOREIGN KEY (CLASS_ID) REFERENCES CLASS(CLASS_ID)
);

CREATE TABLE STUDENT_ECA (
    STUDENT_ID INT,
    ECA_ID INT,
    ROLE VARCHAR(128),
    PRIMARY KEY (STUDENT_ID, ECA_ID),
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(STUDENT_ID),
    FOREIGN KEY (ECA_ID) REFERENCES ECA(ECA_ID)
);

CREATE TABLE STD_ASMNT (
    STUDENT_ID INT,
    ASSESSMENT_ID INT,
    OBTAINED_MARKS INT NOT NULL,
    SUBMISSION_DATE DATE NOT NULL,
    PRIMARY KEY (STUDENT_ID, ASSESSMENT_ID),
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(STUDENT_ID),
    FOREIGN KEY (ASSESSMENT_ID) REFERENCES ASSESSMENT(ASSESSMENT_ID)
);

CREATE TABLE CLASS_TEACHER (
    CLASS_ID INT,
    FACULTY_ID INT,
    PRIMARY KEY (CLASS_ID, FACULTY_ID),
    FOREIGN KEY (CLASS_ID) REFERENCES CLASS(CLASS_ID),
    FOREIGN KEY (FACULTY_ID) REFERENCES FACULTY(FACULTY_ID)
);

CREATE TABLE CLASS_COURSE (
    CLASS_ID INT,
    COURSE_ID VARCHAR(8),
    START_TIME DATETIME NOT NULL,
    END_TIME DATETIME NOT NULL,
    FACULTY_ID INT,
    DAY VARCHAR(8) NOT NULL,
    PRIMARY KEY (COURSE_ID, FACULTY_ID, CLASS_ID, START_TIME, DAY),
    FOREIGN KEY (CLASS_ID) REFERENCES CLASS(CLASS_ID),
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE(COURSE_ID),
    FOREIGN KEY (FACULTY_ID) REFERENCES FACULTY(FACULTY_ID)
);

CREATE TABLE ATTENDANCE (
    STUDENT_ID INT,
    P_DATE DATE NOT NULL,
    PRESENT BOOLEAN NOT NULL,
    PRIMARY KEY (STUDENT_ID, P_DATE),
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(STUDENT_ID)
);

CREATE TABLE RELATION (
    RELATION_ID INT AUTO_INCREMENT PRIMARY KEY,
    RELATION_TYPE VARCHAR(64) NOT NULL
);

CREATE TABLE GUARDIAN (
    GUARDIAN_ID INT AUTO_INCREMENT PRIMARY KEY,
    FIRST_NAME VARCHAR(64) NOT NULL,
    LAST_NAME VARCHAR(64) NOT NULL,
    CNIC VARCHAR(15) NOT NULL,
    PHONE_NUMBER VARCHAR(20) NOT NULL,
    OCCUPATION VARCHAR(128),
    NATIONALITY VARCHAR(32) NOT NULL,
    RELIGION VARCHAR(128)
);

CREATE TABLE STUDENT_GUARDIAN (
    STUDENT_ID INT,
    GUARDIAN_ID INT,
    RELATION_ID INT,
    PRIMARY KEY (STUDENT_ID, GUARDIAN_ID),
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(STUDENT_ID),
    FOREIGN KEY (GUARDIAN_ID) REFERENCES GUARDIAN(GUARDIAN_ID),
    FOREIGN KEY (RELATION_ID) REFERENCES RELATION(RELATION_ID)
);

CREATE TABLE TRANSACTION (
    TRANSACTION_ID INT AUTO_INCREMENT PRIMARY KEY,
    STUDENT_ID INT,
    T_NAME VARCHAR(128),
    T_AMOUNT INT NOT NULL,
    T_DATE DATE NOT NULL,
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(STUDENT_ID)
);
